<!DOCTYPE html>
<html lang="en-US">

<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="description" content=""/>
    <meta name="viewport" content="maximum-scale=1.0" />
    <title> Using Kaspersky Scan Engine in ICAP mode with Squid </title>
	<!-- Google Tag Manager -->
	<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-MPK6ZG');</script>
	<!-- End Google Tag Manager -->
    <script type="text/javascript" src="../langs.js"></script>
    <script type="text/javascript">
        !function ( w, d ) {
            var scriptsPath="/localization/";
            if(w.location.pathname.match(/title\.htm$/)){scriptsPath="./js/"}d.writeln("\x3Cscript type='text/javascript' src='"+scriptsPath+d.documentElement.lang+".js'>\x3C/script>");
        }( window, document );
    </script>	
    <script type="text/javascript" src="toc.js"></script>
    
    <script type="text/javascript" src="aiconverter_result.js"></script>
    <link rel="stylesheet" type='text/css' href="typography.css"/>
    <link rel="stylesheet" type='text/css' href="styles.css"/>
    <link rel="shortcut icon" href="favicon.ico"/>
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon"/>
    <link rel="icon" href="favicon.png" type="image/png"/>

            <!--[if lte IE 9]>
                <link rel="stylesheet" type="text/css" href="bootstrap.css">
            <![endif]-->
            <!--[if lte IE 8]>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js"></script>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/respond.js/1.4.2/respond.js"></script>
            <![endif]-->
            </head>

<body id="who-content" class="no-js">
	<!-- Google Tag Manager (noscript) -->
	<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-MPK6ZG" style="display:none;visibility:hidden"></iframe></noscript>
	<!-- End Google Tag Manager (noscript) -->
	<noscript class="no-js__message">
	<a href="https://support.microsoft.com/en-us/kb/3135465" class="no-js__link">Please enable JavaScript in your browser!</a>
	</noscript>
	<div class="cont">
	<h3 id="t234581" class="heading3">Using Kaspersky Scan Engine in ICAP mode with Squid</h3>
<p class="bodytext">Squid is a caching and forwarding web proxy server for Windows and UNIX-like systems. You can use Kaspersky Scan Engine in ICAP mode to scan traffic that passes through the Squid proxy.</p>
<p class="introheading">Software requirements</p>
<ul class="listbullet1"><li class="listbullet1">Operating system Ubuntu 18.04 or later</li><li class="listbullet1">Squid 4.5 or later</li></ul><p class="introheading">Configuring Squid for working with Kaspersky Scan Engine</p>
<p class="bodytext">For Kaspersky Scan Engine to work with Squid in ICAP mode, you must specify Kaspersky Scan Engine as an ICAP service in the Squid configuration file (squid.conf). </p>
<p class="bodytext">In Squid, an ICAP service is defined in the following format: <code class="programcharacter">icap_service id vectoring_point [options] uri</code>.</p>
<p class="procedureheading">To specify Kaspersky Scan Engine as an ICAP service:</p>
<ol class="listnumber1"><li class="listnumber1">Open squid.conf for editing.</li><li class="listnumber1">Define the mandatory parameters <code class="programcharacter">id</code>, <code class="programcharacter">vectoring_point</code>, and <code class="programcharacter">uri</code>:<ol class="listalpha2"><li class="listalpha2">Set <code class="programcharacter">id</code> to any appropriate identifier. For example, <code class="programcharacter">srv_kl_resp</code> for request modification (REQMOD) mode and <code class="programcharacter">srv_kl_req</code> for response modification (RESPMOD) mode.</li><li class="listalpha2">Set <code class="programcharacter">vectoring_point</code> to an appropriate <code class="programcharacter">*_precache</code> value: <ul class="listbullet3"><li class="listbullet3">For request modification (REQMOD) mode, specify <code class="programcharacter">reqmod_precache</code>.</li><li class="listbullet3">For response modification (RESPMOD) mode, specify <code class="programcharacter">respmod_precache</code>.</li></ul></li><li class="listalpha2">Set <code class="programcharacter">uri</code> to the location of Kaspersky Scan Engine: <ul class="listbullet3"><li class="listbullet3">For REQMOD mode, the URI must have the following format: <code class="programcharacter">icap://servername:port/req</code>.</li><li class="listbullet3">For RESPMOD mode, the URI must have the following format: <code class="programcharacter">icap://servername:port/resp</code>.</li></ul></li></ol></li><li class="listnumber1">Add the following lines to the end of the Squid configuration file:<table class="tableintopic" width="1131" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse" bgcolor="#E5F1FB">
<tr align="left" valign="top">
<td bgcolor="#E5F1FB" width="1131"><p class="program">icap_enable on</p>
<p class="program">adaptation_send_username on</p>
<p class="program">adaptation_send_client_ip on</p>
<p class="program">icap_service srv_kl_resp respmod_precache 0 icap://localhost:1344/resp</p>
<p class="program">icap_service srv_kl_req reqmod_precache 0 icap://localhost:1344/req</p>
<p class="program">adaptation_access srv_kl_resp allow all</p>
<p class="program">adaptation_access srv_kl_req allow all</p>
<p class="program">icap_service_failure_limit -1</p>
<p class="program">icap_service_revival_delay 30</p>
<p class="program">icap_preview_enable off</p>
</td>
</tr>

</table>
<p class="listcontinue1">In the example above, <code class="programcharacter">srv_kl_resp</code> and <code class="programcharacter">srv_kl_req</code> are examples of <code class="programcharacter">id</code>, <code class="programcharacter">respmod_precache</code> and <code class="programcharacter">reqmod_precache</code> are values of <code class="programcharacter">vectoring_point</code>, <code class="programcharacter">0</code> is the value of the Squid <code class="programcharacter">bypass</code> option, and <code class="programcharacter">vectoring_point</code> and <code class="programcharacter">icap://127.0.0.1:1344/req</code> are examples of <code class="programcharacter">uri</code>.</p>
<p class="attentioncontinue1">You can use <code class="programcharacter">127.0.0.1</code> in <code class="programcharacter">uri</code> only if Kaspersky Scan Engine is installed on the same computer as Squid. </p>
</li><li class="listnumber1">Save and close squid.conf.</li><li class="listnumber1">Restart the <code class="programcharacter">squid</code> service:<p class="listcontinue1"><code class="programcharacter">service squid restart</code></p>
</li></ol><p class="introheading">Configuring Squid for working with Kaspersky Scan Engine and enabling SSL scanning</p>
<p class="bodytext">By default, Kaspersky Scan Engine cannot scan SSL/TLS traffic, but you can configure Squid to decrypt it by using the SSL Bumping functionality.</p>
<p class="procedureheading">To configure Squid for working with Kaspersky Scan Engine and enable SSL Bumping:</p>
<ol class="listnumber1"><li class="listnumber1">Install the packages necessary to compile and configure Squid:<p class="listcontinue1"><code class="programcharacter">apt-get install build-essential openssl libssl-dev pkg-config</code></p>
</li><li class="listnumber1">Download source code for Squid 4.5 or later.</li><li class="listnumber1">Unzip the archive that contains the Squid source code to the required directory.</li><li class="listnumber1">Move to this directory.</li><li class="listnumber1">Compile Squid:<p class="listcontinue1"><code class="programcharacter">./configure --with-default-user=proxy --with-openssl --enable-ssl-crtd</code></p>
<p class="listcontinue1"><code class="programcharacter">make all</code></p>
<p class="listcontinue1"><code class="programcharacter">make install</code></p>
<p class="listcontinue1">Options <code class="programcharacter">--with-openssl</code> and <code class="programcharacter">--enable-ssl-crtd</code> are necessary to enable SSL Bumping.</p>
</li><li class="listnumber1">Set up the correct time and date on the server that is running Squid. The time and date are checked every time a client is trying to validate the certificate of this server.</li><li class="listnumber1">Configure OpenSSL:<ol class="listalpha2"><li class="listalpha2">Find the default OpenSSL configuration file <code class="programcharacter">openssl.cnf</code>. The location of this file depends on your operating system, but usually it is <code class="programcharacter">/etc/ssl/openssl.cnf</code>.</li><li class="listalpha2">Open <code class="programcharacter">openssl.cnf</code> for editing.</li><li class="listalpha2">Add the following line to the <code class="programcharacter">[v3_ca]</code> section of the configuration file:<p class="listcontinue2"><code class="programcharacter">keyUsage = cRLSign, keyCertSign</code></p>
</li><li class="listalpha2">Save and close <code class="programcharacter">openssl.cnf</code>.</li></ol></li><li class="listnumber1">Prepare the environment for storing SSL certificates:<ol class="listalpha2"><li class="listalpha2">Create a directory for storing SSL certificates:<p class="listcontinue2"><code class="programcharacter">mkdir /usr/local/squid/etc/ssl_cert -p</code></p>
</li><li class="listalpha2">Change the user and the group that own that directory to <code class="programcharacter">proxy</code>:<p class="listcontinue2"><code class="programcharacter">chown proxy:proxy /usr/local/squid/etc/ssl_cert -R</code></p>
</li><li class="listalpha2">Change the permissions for that directory:<p class="listcontinue2"><code class="programcharacter">chmod 700 /usr/local/squid/etc/ssl_cert -R</code></p>
</li></ol></li><li class="listnumber1">Move to the newly created directory:<p class="listcontinue1"><code class="programcharacter">cd /usr/local/squid/etc/ssl_cert</code></p>
</li><li class="listnumber1">Generate a new self-signed SSL certificate and a private key for the Squid server:<p class="listcontinue1"><code class="programcharacter">openssl req -new -newkey rsa:2048 -sha256 -days 365 -nodes -x509 -extensions v3_ca -keyout squid_ca.pem -out squid_ca.pem</code></p>
</li><li class="listnumber1">Convert the newly created certificate to DER format:<p class="listcontinue1"><code class="programcharacter">openssl x509 -in squid_ca.pem -outform DER -out squid_ca.der</code></p>
</li><li class="listnumber1">Export the generated certificate to the client computers and install it on them as a Certificate Authority certificate. The method of doing this depends on the browser and operating system of the client.</li><li class="listnumber1">Create a new SSL database for the Squid server:<p class="listcontinue1"><code class="programcharacter">/usr/local/squid/libexec/security_file_certgen -c -s /usr/local/squid/var/logs/ssl_db -M 4MB</code></p>
</li><li class="listnumber1">Change the user and the group that own that directory to <code class="programcharacter">proxy</code>:<p class="listcontinue1"><code class="programcharacter">chown proxy:proxy /usr/local/squid/var/logs/ssl_db -R</code></p>
</li><li class="listnumber1">Configure Squid:<ol class="listalpha2"><li class="listalpha2">Find the default Squid configuration file <code class="programcharacter">squid.conf</code>. The location of this file depends on your operating system, but usually it is<code class="programcharacter"> </code> <code class="programcharacter">/usr/local/squid/etc/squid.conf</code>.</li><li class="listalpha2">Open <code class="programcharacter">squid.conf</code> and make the following edits:</li><li class="listalpha2">Find the following line:<p class="listcontinue2"><code class="programcharacter">http_port 3128</code></p>
</li><li class="listalpha2">Replace it with the following line:<p class="listcontinue2"><code class="programcharacter">http_port 3128 ssl-bump cert=/usr/local/squid/etc/ssl_cert/squid_ca.pem generate-host-certificates=on dynamic_cert_mem_cache_size=4MB</code></p>
<p class="listcontinue2">This line enables SSL Bumping on port 3128.</p>
</li><li class="listalpha2">Add the following section:<p class="listcontinue2"><code class="programcharacter">acl step1 at_step SslBump1</code></p>
<p class="listcontinue2"><code class="programcharacter">ssl_bump peek step1</code></p>
<p class="listcontinue2"><code class="programcharacter">ssl_bump bump all</code></p>
<p class="listcontinue2"><code class="programcharacter">sslcrtd_program /usr/local/squid/libexec/security_file_certgen -s /usr/local/squid/var/logs/ssl_db -M 4MB</code></p>
</li><li class="listalpha2">Specify Kaspersky Scan Engine as an ICAP service in the Squid configuration file as described above in the subsection &quot;Configuring Squid for working with Kaspersky Scan Engine&quot;.</li><li class="listalpha2">Save and close <code class="programcharacter">squid.conf</code>.</li></ol></li><li class="listnumber1">Change the user and the group that own the <code class="programcharacter">/usr/local/squid</code> directory to <code class="programcharacter">proxy</code>:<p class="listcontinue1"><code class="programcharacter">chown -R proxy:proxy /usr/local/squid</code></p>
</li><li class="listnumber1">Start Squid and initialize the Squid cache:<p class="listcontinue1"><code class="programcharacter">/usr/local/squid/sbin/squid -z</code></p>
</li></ol><p class="bodytext">Following is an example of a Squid configuration file extract. In this example, Squid uses Kaspersky Scan Engine in ICAP mode to scan HTTP messages in both the REQMOD and RESPMOD modes.</p>
<table class="tableintopic" width="1131" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse" bgcolor="#E5F1FB">
<tr align="left" valign="top">
<td bgcolor="#E5F1FB" width="1131"><p class="program"># SSL bumping configuration</p>
<p class="program">&nbsp;</p>
<p class="program"><code class="programcharacter">acl step1 at_step SslBump1</code></p>
<p class="program"><code class="programcharacter">ssl_bump peek step1</code></p>
<p class="program"><code class="programcharacter">ssl_bump bump all</code></p>
<p class="program">http_port 3128 ssl-bump cert=/usr/local/squid/etc/ssl_cert/squid_ca.pem generate-hostcertificates=on dynamic_cert_mem_cache_size=4MB</p>
<p class="program"><code class="programcharacter">sslcrtd_program /usr/local/squid/libexec/security_file_certgen -s /usr/local/squid/var/logs/ssl_db -M 4MB</code></p>
<p class="program">&nbsp;</p>
<p class="program">&nbsp;</p>
<p class="program"># ICAP configuration</p>
<p class="program">&nbsp;</p>
<p class="program">icap_enable on</p>
<p class="program">adaptation_send_username on</p>
<p class="program">adaptation_send_client_ip on</p>
<p class="program">icap_service srv_kl_resp respmod_precache 0 icap://localhost:1344/resp</p>
<p class="program">icap_service srv_kl_req reqmod_precache 0 icap://localhost:1344/req</p>
<p class="program">adaptation_access srv_kl_resp allow all</p>
<p class="program">adaptation_access srv_kl_req allow all</p>
<p class="program">icap_service_failure_limit -1</p>
<p class="program">icap_service_revival_delay 30</p>
<p class="program">icap_preview_enable off</p>
</td>
</tr>

</table>
<p class="spacer"></p>


	<a href="#" class="bt-home">Page top</a>
	</div>
</body>

</html>
